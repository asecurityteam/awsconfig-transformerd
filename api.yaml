openapi: 3.0.0
x-runtime:
  httpserver:
    address: ":8080"
  logger:
    level: "INFO"
    output: "STDOUT"
  stats:
    output: "DATADOG"
    datadog:
      address: "statsd:8126"
      flushinterval: "10s"
  signals:
    installed:
      - "OS"
    os:
      signals:
        - 2 # SIGINT
        - 15 # SIGTERM
  connstate:
    reportinterval: "5s"
    hijackedcounter: "http.server.connstate.hijacked"
    closedcounter: "http.server.connstate.closed"
    idlegauge: "http.server.connstate.idle.gauge"
    idlecounter: "http.server.connstate.idle"
    activegauge: "http.server.connstate.active.gauge"
    activecounter: "http.server.connstate.active"
    newgauge: "http.server.connstate.new.gauge"
    newcounter: "http.server.connstate.new"
x-transportd:
  backends:
    - app
  app:
    host: "http://app:8081"
    pool:
      ttl: "24h"
      count: 1
info:
  version: 1.0.0
  title: "AWS Config Transformer"
  description: "a lambda handler that receives AWS Config changes and returns a transformed version of the Config change"
  contact:
    name: Security Development
    email: secdev-external@atlassian.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /healthcheck:
    get:
      description: "Liveness check."
      responses:
        "200":
          description: "Success."
      x-transportd:
        backend: app
  /:
    post:
      description: Filter AWS Config events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigNotification'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAssetChanges'
        "400":
          description: "Invalid input"
      x-transportd:
        backend: app
        enabled:
          - "metrics"
          - "accesslog"
          - "requestvalidation"
          - "responsevalidation"
          - "lambda"
        lambda:
          arn: "awsConfigHandler"
          async: false
          request: '#! json .Request.Body !#'
          success: '{"status": 200, "bodyPassthrough": true}'
          error: >
            {
              "status":
              #! if eq .Response.Body.errorType "ErrMissingValue" !# 400,
              #! else !# 500,
              #! end !#
              "bodyPassthrough": true
            }
components:
  schemas:
    ConfigNotification:
      type: object
      properties:
        Message:
          type: string
          description: The AWS Config diff event represented stringified JSON.
        Timestamp:
          type: string
          description: The RFC3339 date time the AWS Config SNS event was sent.
        ProcessedTimestamp:
          type: string
          description: The RFC3339 date time the event was filtered by awsconfig-filterd.
        Type:
          type: string
          description: The AWS Config SNS message type (optional).
        MessageId:
          type: string
          description: The AWS Config SNS message ID (optional).
        TopicArn:
          type: string
          description: The AWS Config SNS topic ARN (optional).
        Subject:
          type: string
          description: The AWS Config SNS subject (optional).
        SignatureVersion:
          type: string
          description: The AWS Config SNS signature version (optional).
        Signature:
          type: string
          description: The AWS Config SNS signature (optional).
        SigningCertURL:
          type: string
          description: The AWS Config SNS signing cert URL (optional).
        UnsubscribeURL:
          type: string
          description: The AWS Config SNS unsubscribe URL (optional).
    CloudAssetChanges:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/CloudAssetChange'
        changeTime:
          type: string
          # format: date-time https://github.com/getkin/kin-openapi/pull/74
        resourceType:
          type: string
        accountId:
          type: string
        region:
          type: string
        resourceId:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
    CloudAssetChange:
      type: object
      properties:
        privateIpAddresses:
          type: array
          items:
            type: string
        publicIpAddresses:
          type: array
          items:
            type: string
        hostnames:
          type: array
          items:
            type: string
        changeType:
          type: string
          enum: [ADDED, DELETED]
